@model IEnumerable<Lab_item_Management_Web.Models.BlackListModel>
@{
    ViewData["Title"] = "Black List";
}
<h1>@ViewData["Title"]</h1>

<script>
    function showBlPopup() {
        document.getElementById('bl-popup').style.visibility = 'visible';
    }
    function hideBlPopup() {
        document.getElementById('bl-popup').style.visibility = 'hidden';
    }
    function showFull(bl) {
        alert('showing Full detail')
        document.getElementById('full-userID').innerHTML = bl.getUserID();
        document.getElementById('full-username').innerHTML = bl.getUserName();
        document.getElementById('full-addDate').innerHTML = bl.getAddDate();
        document.getElementById('full-reason').innerHTML = bl.getReason();
        document.getElementById('full-staffID').innerHTML = bl.getStaffID();
        document.getElementById('full-detail').style.visibility = 'visible'

    }
    function hideFull() {
        document.getElementById('full-detail').style.visibility = 'hidden';
    }

    function sortList(opt) {
        var list, i, switching, b, shouldSwitch;
        list = document.getElementById("blacklist");
        switching = true;
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            b = list.getElementsByTagName("LI");
            // Loop through all list items:
            for (i = 0; i < (b.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Check if the next item should
                switch place with the current item: */
                if (b[i].getElementsByClassName(opt)[0].innerHTML.toLowerCase() > b[i + 1].getElementsByClassName(opt)[0].innerHTML.toLowerCase()) {
                    /* If next item is alphabetically lower than current item,
                    mark as a switch and break the loop: */
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark the switch as done: */
                b[i].parentNode.insertBefore(b[i + 1], b[i]);
                switching = true;
            }
        }
    }

</script>

<div class="content">
    <div class="main">
        <p class="main-txt">Black list</p>
        <hr>
        <div class="info-box">
            <div class="top-right">
                <button onclick="showBlPopup()" class="add-blacklist-btn">Add to Blacklist</button>
                <div class="sort-box">
                    <p class="sort-text">Sort by</p>
                    <select onchange="sortList(this.value)" class="sort-by-select" name="sort-by" id="sort-by">
                        <option value="username">User name</option>
                        <option value="OnDate">date of add</option>
                    </select>
                </div>
            </div>
            <hr style="margin: 0 10px;">
            <div class="blacklist-container">
                <ul id="blacklist">
                    @foreach (var bl in Model)
                    {
                        <li>
                            <div class="bl-user-box" onclick=showFull(@bl)>
                                <p onclick=showFull(@bl) class="username"> @*@bl.getUserName()*@ ouoam</p>
                                <p onclick=showFull(@bl) class="OnDate">@bl.addDate</p>
                                <button class="bl-delete">X</button>
                            </div>
                        </li>
                    }
                </ul>

            </div>
            <div id="bl-popup">
                <h2 class="popup-head">Add to blacklist</h2>
                <hr style="margin: 10px;" />
                <input type="text" name="username" id="bl-add-username" value="username" class="bl-inp-username" />
                @using (Html.BeginForm("addBlacklist", "BlackList", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.userID, "User ID")
                        @Html.TextBoxFor(model => model.userID, new { @class = "form-control", placeholder =
                    "กรุณาใส่ User ID" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.reason, "เหตุผลของในแบน")
                        <div class='input-group date' id='dtReleaseDate'>
                            @Html.TextBoxFor(model => model.reason, new { @class = "form-control", placeholder =
                        "กรุณาใส่เหตุผล" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class=form-group>
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                }
                <button onclick="hideBlPopup()" class="bl-add-cancel">Cancel</button>
                <button onclick="hideBlPopup()" class="bl-add-confirm">Confirm</button>
            </div>
            <div id="full-detail">
                <h2 class="popup-head">Blacklist user</h2>
                <hr style="margin: 10px;" />
                <p id="full-userID"></p>
                <p id="full-username"></p>
                <p id="full-addDate"></p>
                <p id="full-reason"></p>
                <p id="full-staffID"></p>
            </div>
        </div>
    </div>
</div>

<style>
    /* .header .header-text {
    position: absolute;
    width: 417px;
    height: 63px;
    left: 54px;
    top: -38px;

    font-family: Roboto;
    font-style: normal;
    font-weight: normal;
    font-size: 48px;
    line-height: 56px;
    color: #ffffff;
  }

  .header-nav-bar {
    float: right;
    top: 8px;
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
  }

  li {
    float: left;
  }

  li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
  }

  li a:hover {
    background-color: #111;
  } */
    /* 
  .header-bg {
    position: absolute;
    width: 100%;
    height: 80px;
    left: 0px;
    top: 0px;
    background: #ff7d7d;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    z-index: -200;
  } */

    /* .main {
    background: #fbfbfb;
  } */

    /* .main-txt {
    position: absolute;
    width: 232px;
    height: 50px;
    left: 62px;
    top: 100px;

    font-family: Roboto;
    font-style: normal;
    font-weight: normal;
    font-size: 36px;
    line-height: 42px;

    color: #000000;
  } */

    /* .main-txt-end-line {
    position: absolute;
    width: 1315px;
    height: 0px;
    left: 62px;
    top: 167px;

    border: 1px solid #000000;
  } */

    .info-box {
        /* position: absolute; */
        width: 100%;
        height: 75vh;
        /* left: 65px;
    top: 200px; */
        display: flex;
        flex-direction: column;
        margin-top: 30px;

        background: #ffdfc8;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
        border-radius: 10px;
    }

    .top-right {
        display: flex;
        justify-content: flex-end;
        margin: 10px;
    }

    .add-blacklist-btn {
        /* position: absolute;
    margin-top: 10px;
    right: 22%;
    font-family: Roboto;
    font-style: normal;
    font-weight: normal; */
        font-size: 18px;
        width: 150px;
        height: 30px;
        background-color: #f5af5f;
        color: #000000;
    }

    .sort-box {
        display: flex;
        flex-direction: row;
        margin: 0 50px;

    }

    .sort-box p {
        /* position: absolute;
    margin-top: 15px;
    right: 15%;

    font-family: Roboto;
    font-style: normal;
    font-weight: normal; */
        margin: 0 20px;
        font-size: 18px;
    }

    .sort-by-select {
        /* position: absolute;
    margin-top: 13px;
    right: 5%;
    width: 115px;

    font-family: Roboto;
    font-style: normal;
    font-weight: normal; */
        font-size: 18px;
    }

    /* .line-head {
    position: absolute;
    margin-left: 5%;
    margin-right: 5%;
    margin-top: 45px;
    width: 90%;
    border: 1px solid #292929;
  } */

    .blacklist-container {
        background-color: rgb(167, 173, 255);
        /*purple*/
        width: 95%;
        height: 85%;
        margin: auto;
        padding: 5px;
        overflow: auto;

    }

    #blacklist {
        display: flex;
        flex-flow: row wrap;
        list-style-type: none;
    }

    #blacklist li {
        /*display:inline-block;*/
        margin: 3px;
        flex: 0 1 calc(20% - 6px);
        /*red*/
    }

    .bl-user-box {
        position: relative;
        background-color: rgb(172, 172, 172);
        margin-left: 1%;
        border-radius: 10px;

    }

    .username {
        position: relative;
        /* font-family: Roboto;
    font-style: normal;
    font-weight: normal; */
        font-size: 18px;
        margin-left: 10%;
        padding: 3% 0;
    }

    .OnDate {
        /* visibility:hidden;*/
        position: relative;
        font-size: 10px;
        /*margin-right: 10%; */
        padding: 0 40%;
        width: 100%;
    }

    .bl-delete {
        position: absolute;
        right: 5%;
        top: 15%;
        width: 10%;
        border-radius: 50%;
        background-color: rgb(253, 100, 100);
        color: #fbfbfb;
        outline: none;
        user-select: none;
    }

    #bl-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        /* margin-top: -360px;
    margin-left: -640px; */
        width: 480px;
        height: 270px;
        background-color: rgb(204, 204, 204);
        visibility: hidden;
        border-radius: 10px;

    }

    .popup-head {
        font-size: 24px;
        margin: 10px;

    }

    .bl-inp-username {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 40%;

        font-family: Roboto;
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
    }

    .bl-add-confirm {
        position: absolute;
        bottom: 5%;
        right: 5%;
        width: 20%;
        font-family: Roboto;
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        background-color: rgb(51, 133, 55);
        color: #fbfbfb;
    }

    .bl-add-cancel {
        position: absolute;
        bottom: 5%;
        right: 30%;
        width: 20%;
        font-family: Roboto;
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        background-color: rgb(148, 74, 74);
        color: #fbfbfb;
    }

    #full-detail {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 480px;
        height: 270px;
        background-color: rgb(204, 204, 204);
        visibility: hidden;
        border-radius: 10px;
        background-color: #f5af5f;
    }
</style>