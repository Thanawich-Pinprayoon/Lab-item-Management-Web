@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using LabManage.Models
@inject SignInManager<Users> SignInManager
@model IEnumerable<LabManage.Models.Transaction>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.user)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.staff)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tool)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.toolID)
            </th>
            @* <th>
                @Html.DisplayNameFor(model => model.start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.end)
            </th> *@
             <th>
                @Html.DisplayNameFor(model => model.date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.user.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.staff.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tool.name)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.item.id)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.toolID)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.end)
            </td> *@
             <td>
                @Html.DisplayFor(modelItem => item.date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.id">Details</a>
@if ((await AuthorizationService.AuthorizeAsync(User, "ManageLab")).Succeeded)
{
    if (item.status == LabManage.Models.Status.Book) {
        @:|
        <a asp-action="Give" asp-route-id="@item.id">Give</a>
    }
    if (item.status == LabManage.Models.Status.Borrow) {
        @:|
        <a asp-action="Grab" asp-route-id="@item.id">Grab</a>
    }
}
@if (item.status == LabManage.Models.Status.Book && item.userID == User.FindFirst(ClaimTypes.NameIdentifier).Value)
{
    @:|
    <a asp-action="Cancel" asp-route-id="@item.id">Cancel</a>
}
            </td>
        </tr>
}
    </tbody>
</table>
